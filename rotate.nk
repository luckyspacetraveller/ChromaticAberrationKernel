#! C:/Program Files/Nuke11.3v1/nuke-11.3.1.dll -nx
version 11.3 v1
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="2552" y="352" w="1920" h="1057" maximized="1" screen="1">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="972" stretch="1"/>
            <splitter orientation="2">
                <split size="592"/>
                <dock id="" activePageId="Viewer.1" focus="true">
                    <page id="Viewer.1"/>
                </dock>
                <split size="417"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="900"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name C:/Users/lukas/Desktop/kernel/rotate.nk
 frame 55
 fps 25
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement OCIO
 OCIO_config custom
 customOCIOConfigPath C:/Users/lukas/.nuke/_ACES/aces_1.0.3_L/config.ocio
 defaultViewerLUT "OCIO LUTs"
 workingSpaceLUT "ACES - ACEScg"
 monitorLut ACES/sRGB
 int8Lut "Utility - sRGB - Texture"
 int16Lut "ACES - ACEScc"
 logLut "Input - ADX - ADX10"
 floatLut "ACES - ACEScg"
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0xaaaaaa00
 label bokeh
 note_font_size 42
 xpos 1786
 ypos -313
 bdwidth 197
 bdheight 162
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x8e8e3800
 label holdout
 note_font_size 42
 xpos 1486
 ypos -320
 bdwidth 190
 bdheight 174
}
Ramp {
 inputs 0
 p1 {1110 856}
 name Ramp1
 xpos 142
 ypos -278
}
Constant {
 inputs 0
 channels rgb
 format "256 256 0 0 256 256 1 square_256"
 name Constant1
 xpos -91
 ypos -303
}
Radial {
 area {0 0 256 256}
 name Radial1
 xpos -91
 ypos -224
}
Reformat {
 type scale
 scale 0.58
 name Reformat1
 xpos -91
 ypos -198
}
Constant {
 inputs 0
 color {0 0 0 1}
 color_panelDropped true
 name Constant2
 xpos 979
 ypos -494
}
Card2 {
 translate {0 -0.5600000024 -2.447838021e-08}
 rotate {90 0 0}
 uniform_scale 100
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card1
 xpos 1076
 ypos -471
}
Crop {
 inputs 0
 box {0 0 100 {box.r}}
 reformat true
 crop false
 name Crop4
 xpos 1796
 ypos -374
}
set Nca4ae800 [stack 0]
Dot {
 name Dot3
 xpos 1566
 ypos -370
}
Flare {
 position {{width/2} {height/2}}
 radius {{(width/2)-4} {(width/2)} {width/2}}
 inner_color 1
 name Flare3
 xpos 1532
 ypos -223
}
Noise {
 inputs 0
 gain 0.755
 gamma 0.775
 center {960 540}
 name Noise2
 xpos 1893
 ypos -233
}
Grade {
 white 1.94
 gamma 2.26
 white_clamp true
 name Grade7
 xpos 1893
 ypos -207
}
push $Nca4ae800
Flare {
 position {{width/2} {height/2}}
 radius {{(width/2)-4} {(width/2)-1} {width/2}}
 ring_color 5
 inner_color 1
 name Flare4
 xpos 1796
 ypos -233
}
Merge2 {
 inputs 2
 operation multiply
 name Merge7
 xpos 1796
 ypos -207
}
Crop {
 box {0 0 100 {box.r}}
 reformat true
 name Crop5
 xpos 1796
 ypos -181
}
Dot {
 name Dot2
 xpos 1684
 ypos -112
}
ShuffleCopy {
 inputs 2
 alpha red
 name ShuffleCopy2
 xpos 1532
 ypos -116
}
Roto {
 inputs 0
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse12 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc127e500 0}
        {x43d88000 x446f0000}
        {x4127e500 0}
        {0 xc0d41400}
        {x43e20000 x44720000}
        {0 x40d41400}
        {x4127e500 0}
        {x43d88000 x44750000}
        {xc127e500 0}
        {0 x40d41400}
        {x43cf0000 x44720000}
        {0 xc0d41400}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc127e500}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x4127e500}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0d41400}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40d41400}}}
        {{{x425c0000 x4127e500}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc127e500}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40d41400}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0d41400}}}}}}
     {tx x425c0000 x43d88000 x44720000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse11 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc1541400 0}
        {x44d98000 x444d0000}
        {x41541400 0}
        {0 xc130bb40}
        {x44dc8000 x44520000}
        {0 x4130bb40}
        {x41541400 0}
        {x44d98000 x44570000}
        {xc1541400 0}
        {0 x4130bb40}
        {x44d68000 x44520000}
        {0 xc130bb40}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc1541400}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x41541400}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc130bb40}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x4130bb40}}}
        {{{x425c0000 x41541400}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc1541400}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x4130bb40}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc130bb40}}}}}}
     {tx x425c0000 x44d98000 x44520000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse10 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc1048c80 0}
        {x44be2000 x42f00000}
        {x41048c80 0}
        {0 xc11f0ee0}
        {x44c00000 x430a0000}
        {0 x411f0ee0}
        {x41048c80 0}
        {x44be2000 x431c0000}
        {xc1048c80 0}
        {0 x411f0ee0}
        {x44bc4000 x430a0000}
        {0 xc11f0ee0}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc1048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x41048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc11f0ee0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x411f0ee0}}}
        {{{x425c0000 x41048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc1048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x411f0ee0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc11f0ee0}}}}}}
     {tx x425c0000 x44be2000 x430a0000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse9 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc08d6300 0}
        {x44d60000 x431c0000}
        {x408d6300 0}
        {0 xc09f0ee0}
        {x44d70000 x43250000}
        {0 x409f0ee0}
        {x408d6300 0}
        {x44d60000 x432e0000}
        {xc08d6300 0}
        {0 x409f0ee0}
        {x44d50000 x43250000}
        {0 xc09f0ee0}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc08d6300}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x408d6300}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc09f0ee0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x409f0ee0}}}
        {{{x425c0000 x408d6300}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc08d6300}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x409f0ee0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc09f0ee0}}}}}}
     {tx x425c0000 x44d60000 x43250000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse8 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc09f0f00 0}
        {x44c72000 x44030000}
        {x409f0f00 0}
        {0 xc15cea00}
        {x44c84000 x44094000}
        {0 x415cea00}
        {x409f0f00 0}
        {x44c72000 x440f8000}
        {xc09f0f00 0}
        {0 x415cea00}
        {x44c60000 x44094000}
        {0 xc15cea00}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc09f0f00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x409f0f00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15cea00}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415cea00}}}
        {{{x425c0000 x409f0f00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc09f0f00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415cea00}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15cea00}}}}}}
     {tx x425c0000 x44c72000 x44094000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse7 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc1cb3dc0 0}
        {x44b70000 x44420000}
        {x41cb3dc0 0}
        {0 xc1a379e0}
        {x44bcc000 x444b4000}
        {0 x41a379e0}
        {x41cb3dc0 0}
        {x44b70000 x44548000}
        {xc1cb3dc0 0}
        {0 x41a379e0}
        {x44b14000 x444b4000}
        {0 xc1a379e0}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc1cb3dc0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x41cb3dc0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc1a379e0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x41a379e0}}}
        {{{x425c0000 x41cb3dc0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc1cb3dc0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x41a379e0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc1a379e0}}}}}}
     {tx x425c0000 x44b70000 x444b4000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse6 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc15cea00 0}
        {x44816000 x443b0000}
        {x415cea00 0}
        {0 xc15cea00}
        {x44848000 x44414000}
        {0 x415cea00}
        {x415cea00 0}
        {x44816000 x44478000}
        {xc15cea00 0}
        {0 x415cea00}
        {x447c8000 x44414000}
        {0 xc15cea00}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc15cea00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x415cea00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15cea00}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415cea00}}}
        {{{x425c0000 x415cea00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc15cea00}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415cea00}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15cea00}}}}}}
     {tx x425c0000 x44816000 x44414000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse5 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc1048c80 0}
        {x446a4000 x43db0000}
        {x41048c80 0}
        {0 xc0f76c80}
        {x446e0000 x43e20000}
        {0 x40f76c80}
        {x41048c80 0}
        {x446a4000 x43e90000}
        {xc1048c80 0}
        {0 x40f76c80}
        {x44668000 x43e20000}
        {0 xc0f76c80}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc1048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x41048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0f76c80}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40f76c80}}}
        {{{x425c0000 x41048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc1048c80}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40f76c80}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0f76c80}}}}}}
     {tx x425c0000 x446a4000 x43e20000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse4 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc188f780 0}
        {x44564000 x430e0000}
        {x4188f780 0}
        {0 xc1776c70}
        {x445e0000 x432a0000}
        {0 x41776c70}
        {x4188f780 0}
        {x44564000 x43460000}
        {xc188f780 0}
        {0 x41776c70}
        {x444e8000 x432a0000}
        {0 xc1776c70}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc188f780}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x4188f780}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc1776c70}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x41776c70}}}
        {{{x425c0000 x4188f780}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc188f780}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x41776c70}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc1776c70}}}}}}
     {tx x425c0000 x44564000 x432a0000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse3 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc19f0ee0 0}
        {x43b20000 x43cc0000}
        {x419f0ee0 0}
        {0 xc19638b0}
        {x43c40000 x43dd0000}
        {0 x419638b0}
        {x419f0ee0 0}
        {x43b20000 x43ee0000}
        {xc19f0ee0 0}
        {0 x419638b0}
        {x43a00000 x43dd0000}
        {0 xc19638b0}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc19f0ee0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x419f0ee0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc19638b0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x419638b0}}}
        {{{x425c0000 x419f0ee0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc19f0ee0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x419638b0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc19638b0}}}}}}
     {tx x425c0000 x43b20000 x43dd0000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse2 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc08d6280 0}
        {x42e40000 x42a40000}
        {x408d6280 0}
        {0 xc15413d0}
        {x42f40000 x42d40000}
        {0 x415413d0}
        {x408d6280 0}
        {x42e40000 x43020000}
        {xc08d6280 0}
        {0 x415413d0}
        {x42d40000 x42d40000}
        {0 xc15413d0}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc08d6280}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x408d6280}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15413d0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415413d0}}}
        {{{x425c0000 x408d6280}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc08d6280}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x415413d0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc15413d0}}}}}}
     {tx x425c0000 x42e40000 x42d40000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {xc0776c60 0}
        {x429e0000 x44718000}
        {x40776c60 0}
        {0 xc0d41400}
        {x42ac0000 x44748000}
        {0 x40d41400}
        {x40776c60 0}
        {x429e0000 x44778000}
        {xc0776c60 0}
        {0 x40d41400}
        {x42900000 x44748000}
        {0 xc0d41400}}}
      {cc
       {f 8192}
       {p
        {{{x425c0000 xc0776c60}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 x40776c60}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0d41400}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40d41400}}}
        {{{x425c0000 x40776c60}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 xc0776c60}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 x40d41400}}}
        {{{x425c0000 0}}
      {{x425c0000 0}}}
        {{{x425c0000 0}}
      {{x425c0000 xc0d41400}}}}}}
     {tx x425c0000 x429e0000 x44748000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 55
 lifetime_end 55
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 xpos 901
 ypos -233
}
BlinkScript {
 inputs 2
 ProgramGroup 1
 KernelDescription "1 \"ConvolutionKernel\" iterate pixelWise a9c7458f78bec2716cdd2728bff6f92cd944bea16db951b3582e02a64a2c7fb2 3 \"src\" Read Ranged2D \"filter\" Read Random \"dst\" Write Point 3 \"Resolution\" Float 2 AADwRAAAh0Q= \"Scale\" Float 1 AACAPw== \"Holdout Offset\" Float 1 AACAPw=="
 kernelSource "kernel ConvolutionKernel : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> src;\n  Image<eRead, eAccessRandom,eEdgeConstant> filter;\n  Image<eWrite> dst;\n\n\n  param:\n    float2 Resolution;\n    float Scale;\n    float HoldoutOffset;\n\nlocal:\n  int2 _filterOffset;\n\n\n  void define() \{\n    defineParam(HoldoutOffset, \"Holdout Offset\", float(1));\n    defineParam(Scale, \"Scale\", float(1));\n    defineParam(Resolution, \"Resolution\", float2(1920,1080));\n  \}\n\n\n  void init()\n  \{\n    int2 filterRadius(filter.bounds.width()/2, filter.bounds.height()/2); \n    _filterOffset\[0] = (filter.bounds.x1 - filterRadius\[0])*Scale;\n    _filterOffset\[1] = (filter.bounds.y1 - filterRadius\[1])*Scale;\n    src.setRange(-filterRadius\[0]*Scale, -filterRadius\[1]*Scale, filterRadius\[0]*Scale, filterRadius\[1]*Scale);\n  \}\n\n  void process(int2 pos) \{\n    //Definitions\n    SampleType(src) valueSum(0);\n    ValueType(filter) filterSum(0);\n    ValueType(filter) filterVal;\n    float2 Offset;\n    Offset.x =  filter.bounds.x2*(((pos.x-(Resolution.x/2))/Resolution.x)*HoldoutOffset);\n    Offset.y =  filter.bounds.y2*(((pos.y-(Resolution.y/2))/Resolution.x)*HoldoutOffset);\n    for(int j = filter.bounds.y1; j < filter.bounds.y2*Scale; j++) \{\n      for(int i = filter.bounds.x1; i < filter.bounds.x2*Scale; i++) \{ \n        float4 SourceVal = src(i + _filterOffset\[0], j + _filterOffset\[1]);\n        if (SourceVal.x > 0) \{\n          filterVal = filter((i/Scale),(j/Scale), 0);\n          valueSum += (filterVal * bilinear(filter,(i/Scale)+(Offset.x),(j/Scale)+(Offset.y),3) )*SourceVal;\n          filterSum += filterVal;\n        \}\n        else \{\n          filterSum += 0.3333333; //1 divided by 3\n        \}\n\n      \}\n    \}\n    if (filterSum != 0) \n      valueSum /= filterSum;\n    dst() = valueSum;\n  \}\n\};"
 rebuild ""
 "ConvolutionKernel_Holdout Offset" 1.205
 rebuild_finalise ""
 name BlinkScript5
 xpos 1170
 ypos -122
}
Viewer {
 input_process false
 name Viewer2
 xpos 1170
 ypos -86
}
Camera2 {
 inputs 0
 translate {-7.97943783 -1.61051466 -14.70071983}
 rotate {9.321992443 -150.2002858 0}
 focal 52.5
 name Camera1
 xpos 1267
 ypos -439
}
set Nb663b000 [stack 0]
push $Nb663b000
Sphere {
 inputs 0
 name Sphere1
 xpos 1171
 ypos -743
}
ProcGeo {
 orient All
 Gain 1
 Speed 1
 name ProcGeo1
 xpos 1171
 ypos -717
}
push 0
ParticleEmitter {
 inputs 2
 rate 820
 lifetime 50
 velocity 0
 size 0.05
 name ParticleEmitter1
 xpos 1171
 ypos -655
}
ParticleTurbulence {
 strength {0.05 {strength.x} {strength.x}}
 scale {1 {scale.x} {scale.x}}
 offset {0 {(sin(random((frame+100)/10))-0.4)*10} 0}
 max_age 0.63
 name ParticleTurbulence1
 xpos 1171
 ypos -629
}
ParticleExpression {
 temp_name0 col
 temp_expr0 v(1,0.8,0.5)
 colexpr col*(pow(mag(vel),5))*10000
 opacityexpr (pow(mag(vel),4))*1000
 name ParticleExpression1
 xpos 1171
 ypos -591
}
ParticleDrag {
 drag 0.665
 name ParticleDrag1
 xpos 1171
 ypos -553
}
ParticleCurve {
 curves {r {}
   g {}
   b {}
   a {curve l 0 x0.3139404953 1 x1 0}
   size {curve -0.003249883652 s0 x0.2812267244 0.01632953063 x1 0.002249956131}
   mass {}}
 affect_rgb false
 affect_size true
 name ParticleCurve1
 xpos 1171
 ypos -515
}
ParticleBounce {
 out_bounce_mode kill
 in_bounce_mode kill
 translate {0 -1.539999962 0}
 name ParticleBounce1
 xpos 1171
 ypos -477
}
Scene {
 inputs 2
 name Scene1
 xpos 1180
 ypos -439
}
push 0
ScanlineRender {
 inputs 3
 samples 8
 temporal_jitter 0.32
 uniform_distribution true
 motion_vectors_type distance
 name ScanlineRender1
 xpos 1170
 ypos -340
}
Dot {
 name Dot4
 xpos 1204
 ypos -289
}
set Ncb0fdc00 [stack 0]
Grade {
 white 2.32
 gamma 0.39
 name Grade1
 xpos 1060
 ypos -293
}
ColorLookup {
 lut {master {}
   red {}
   green {curve C k 0 s0 0.9949999452 s0.5500000119}
   blue {curve C k 0 s0.5 l 1 s0.1000000015}
   alpha {}}
 name ColorLookup1
 xpos 1060
 ypos -267
}
Group {
 name ExpoGlow
 xpos 1060
 ypos -217
 addUserKnob {20 exponentialGlow l "Exponential Glow"}
 addUserKnob {20 PreGrade n 1}
 addUserKnob {6 preview t "Check this to preview the input image the glow will get to process." +STARTLINE}
 addUserKnob {41 blackpoint T PreGradeNode.blackpoint}
 addUserKnob {41 whitepoint T PreGradeNode.whitepoint}
 addUserKnob {41 black l lift T PreGradeNode.black}
 addUserKnob {41 white l gain T PreGradeNode.white}
 addUserKnob {41 multiply T PreGradeNode.multiply}
 addUserKnob {41 add l offset T PreGradeNode.add}
 addUserKnob {41 gamma T PreGradeNode.gamma}
 addUserKnob {41 black_clamp_1 l "black clamp" T PreGradeNode.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T PreGradeNode.white_clamp}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 GlowSettings l "Glow Settings" n 1}
 addUserKnob {7 size l exponent t "Gradually dials in exponential levels of glow. Defaults to 7 (2^7 = 128px glow), max is 13 (2^13 = 8192px glow)." R 0 13}
 size 12.3
 addUserKnob {7 stretch t "Positive values will stretch the glow horizontally, negative values vertically." R -10 10}
 addUserKnob {14 glowstretch l INVISIBLE t "Lets you stretch the blur horizontally/vertically. Works as a multiplier." +INVISIBLE R 0 100}
 glowstretch {1 1}
 addUserKnob {6 subtract_input l "subtract input" t "Will subtract the pre-graded image from the glow result, making for less hot highlights." +STARTLINE}
 subtract_input true
 addUserKnob {6 screen t "Will use blending mode 'screen' instead of 'plus' for softer highlights." +STARTLINE}
 addUserKnob {6 ignore_alpha l "ignore alpha" t "Will apply the glow only to rgb and keep the original alpha intact." +STARTLINE}
 ignore_alpha true
 addUserKnob {4 cropbehavior l "crop to" t "Lets you select different crop behaviors." M {bbox "root format" glow}}
 cropbehavior "root format"
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 PostGrade n 1}
 PostGrade 0
 addUserKnob {41 blackpoint_1 l blackpoint T PostGradeNode.blackpoint}
 addUserKnob {41 whitepoint_1 l whitepoint T PostGradeNode.whitepoint}
 addUserKnob {41 black_1 l lift T PostGradeNode.black}
 addUserKnob {41 white_1 l gain T PostGradeNode.white}
 addUserKnob {41 multiply_1 l multiply T PostGradeNode.multiply}
 addUserKnob {41 add_1 l offset T PostGradeNode.add}
 addUserKnob {41 gamma_1 l gamma T PostGradeNode.gamma}
 addUserKnob {41 black_clamp l "black clamp" T PostGradeNode.black_clamp}
 addUserKnob {41 white_clamp_1 l "white clamp" -STARTLINE T PostGradeNode.white_clamp}
 addUserKnob {41 saturation T PostSaturation.saturation}
 addUserKnob {41 mode l "luminance math" T PostSaturation.mode}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {41 maskChannelMask l "" -STARTLINE T Dissolve1.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Dissolve1.inject}
 addUserKnob {41 fringe -STARTLINE T Dissolve1.fringe}
 addUserKnob {41 invert_mask l invert -STARTLINE T Dissolve1.invert_mask}
 addUserKnob {7 mix t "Adjust how much of the glow gets added to the image."}
 mix 1
 addUserKnob {6 previewPost l "effect only" t "See the glow result with PostGrade. Useful when you want to keep the glow outside of the main tree to do fancy awesome stuff with it before bringing it back in." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 whodunnit l "" t "\nIt wasn't me! ... oh, that? Yeah, that was me.\nShoot me a mail:\njulian\[at]yellow-ant\[dot]net \n\naugust 2013\n\n" +STARTLINE T "expoglow \n"}
 addUserKnob {20 ColorShift_1 l "Color Shift"}
 addUserKnob {20 ShiftRed l "Shift Red" n 1}
 addUserKnob {41 white_2 l gain T TintRed123.white}
 addUserKnob {41 translate T ShiftRed123.translate}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 ShiftGreen l "Shift Green" n 1}
 addUserKnob {41 white_3 l gain T TintGreen123.white}
 addUserKnob {41 translate_1 l translate T ShiftGreen123.translate}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 ShiftBlue l "Shift Blue" n 1}
 addUserKnob {41 white_4 l gain T TintBlue123.white}
 addUserKnob {41 translate_2 l translate T ShiftBlue123.translate}
 addUserKnob {20 endGroup_2 l endGroup n -1}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x272727ff
  label PreGrade
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1145
  ypos 612
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0x272727ff
  label Shift
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1143
  ypos 1792
  bdwidth 1354
  bdheight 249
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x272727ff
  label Crop
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1142
  ypos 2081
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x272727ff
  label Blur
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1141
  ypos 837
  bdwidth 1351
  bdheight 699
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x272727ff
  label PostGrade
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1142
  ypos 1579
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x272727ff
  label BlendMode
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1144
  ypos 2309
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x272727ff
  label Preview
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1145
  ypos 2529
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x272727ff
  label IgnoreA
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1144
  ypos 2751
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x272727ff
  label Input
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1145
  ypos 179
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x272727ff
  label Output
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1144
  ypos 2970
  bdwidth 1353
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x272727ff
  label Mask
  note_font "Verdana Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic Italic"
  note_font_size 100
  xpos -1145
  ypos 390
  bdwidth 1353
  bdheight 176
 }
 Input {
  inputs 0
  name mask
  xpos -160
  ypos 494
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -384
  ypos 230
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos -384
  ypos 273
 }
set Nbadac000 [stack 0]
 Dot {
  name Dot8
  xpos -350
  ypos 432
 }
set Nc823a800 [stack 0]
push $Nc823a800
 Dot {
  name Dot10
  xpos -435
  ypos 432
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  xpos -469
  ypos 460
 }
 Dot {
  name Dot11
  xpos -435
  ypos 497
 }
 Dissolve {
  inputs 2+1
  which 1
  maskChannelMask -rgba.alpha
  maskChannelInput -rgba.alpha
  name Dissolve1
  xpos -384
  ypos 488
 }
set Nc0d13000 [stack 0]
 Grade {
  channels rgba
  name PreGradeNode
  xpos -384
  ypos 675
 }
 Dot {
  name Dot20
  xpos -350
  ypos 711
 }
set Nc0c21400 [stack 0]
 Dot {
  name Dot146
  xpos -350
  ypos 927
 }
set Nd0ee5000 [stack 0]
 Dot {
  name Dot150
  xpos -350
  ypos 963
 }
set Nf134c400 [stack 0]
 Dot {
  name Dot149
  xpos -350
  ypos 999
 }
set Ncb480400 [stack 0]
 Dot {
  name Dot148
  xpos -350
  ypos 1035
 }
set Nc21c4c00 [stack 0]
 Dot {
  name Dot152
  xpos -350
  ypos 1071
 }
set Nc18e7c00 [stack 0]
 Dot {
  name Dot151
  xpos -350
  ypos 1107
 }
set Nbb4df800 [stack 0]
 Dot {
  name Dot153
  xpos -350
  ypos 1143
 }
set Nc261fc00 [stack 0]
 Dot {
  name Dot147
  xpos -350
  ypos 1179
 }
set Ne6b35800 [stack 0]
 Dot {
  name Dot1
  xpos -350
  ypos 1215
 }
set Ne6410400 [stack 0]
 Dot {
  name Dot2
  xpos -350
  ypos 1251
 }
set Nd0e20000 [stack 0]
 Dot {
  name Dot3
  xpos -350
  ypos 1286
 }
set Nc3e96c00 [stack 0]
 Dot {
  name Dot4
  xpos -350
  ypos 1323
 }
set Nc1998800 [stack 0]
 Dot {
  name Dot5
  xpos -350
  ypos 1361
 }
set Nc051bc00 [stack 0]
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*4096:4096" i} {"stretch < 0 ? (1-stretch)*4096:4096" i}}
  crop false
  name blur_4096
  xpos -298
  ypos 1358
 }
push $Nc1998800
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*2048:2048" i} {"stretch < 0 ? (1-stretch)*2048:2048" i}}
  crop false
  name blur_2048
  xpos -298
  ypos 1320
 }
push $Nc3e96c00
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*1024:1024" i} {"stretch < 0 ? (1-stretch)*1024:1024" i}}
  crop false
  name blur_1024
  xpos -298
  ypos 1283
 }
push $Nd0e20000
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*512:512" i} {"stretch < 0 ? (1-stretch)*512:512" i}}
  crop false
  name blur_512
  xpos -298
  ypos 1248
 }
push $Ne6410400
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*256:256" i} {"stretch < 0 ? (1-stretch)*256:256" i}}
  crop false
  name blur_256
  xpos -298
  ypos 1212
 }
push $Ne6b35800
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*128:128" i} {"stretch < 0 ? (1-stretch)*128:128" i 128}}
  crop false
  name blur_128
  xpos -298
  ypos 1176
 }
push $Nc261fc00
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*64:64" i} {"stretch < 0 ? (1-stretch)*64:64" i}}
  crop false
  name blur_64
  xpos -298
  ypos 1140
 }
push $Nbb4df800
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*32:32" i} {"stretch < 0 ? (1-stretch)*32:32" i}}
  crop false
  name blur_32
  xpos -298
  ypos 1104
 }
push $Nc18e7c00
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*16:16" i} {"stretch < 0 ? (1-stretch)*16:16" i}}
  crop false
  name blur_16
  xpos -298
  ypos 1068
 }
push $Nc21c4c00
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*8:8" i} {"stretch < 0 ? (1-stretch)*8:8" i}}
  crop false
  name blur_8
  xpos -298
  ypos 1032
 }
push $Ncb480400
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*4 : 4" i} {"stretch < 0 ? (1-stretch)*4:4" i}}
  crop false
  name blur_4
  xpos -298
  ypos 996
 }
push $Nf134c400
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*2 : 2" i} {"stretch < 0 ? (1-stretch)*2:2" i}}
  crop false
  name blur_2
  xpos -298
  ypos 960
 }
push $Nd0ee5000
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*1 : 1" i} {"stretch < 0 ? (1-stretch)*1 : 1" i}}
  crop false
  mix {{parent.Group5.outVal i}}
  name blur_1
  xpos -298
  ypos 924
 }
set Nc0965000 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size i}}
  name Plus2
  xpos -185
  ypos 960
 }
set Nc0ba2c00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-1 i}}
  name Plus3
  xpos -185
  ypos 996
 }
set Nbb4be400 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-2 i}}
  name Merge19
  xpos -185
  ypos 1032
 }
set Nc8dbdc00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-3 i}}
  name Merge20
  xpos -185
  ypos 1068
 }
set Nc0964000 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-4 i}}
  name Merge21
  xpos -185
  ypos 1104
 }
set Nc2bfac00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-5 i}}
  name Merge22
  xpos -185
  ypos 1140
 }
set Nc7e2ac00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-6 i}}
  name Merge23
  xpos -185
  ypos 1176
 }
set Nc83e0c00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-7 i}}
  name Merge1
  xpos -185
  ypos 1212
 }
set Nc8f1d800 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-8 i}}
  name Merge2
  xpos -185
  ypos 1248
 }
set Ne5928c00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-9 i}}
  name Merge3
  xpos -185
  ypos 1283
 }
set Nc97e5c00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-10 i}}
  name Merge4
  xpos -185
  ypos 1320
 }
set Nc2461c00 [stack 0]
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-11 i}}
  name Merge5
  xpos -185
  ypos 1358
 }
set Ncbaffc00 [stack 0]
 Group {
  name Group13
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1358
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 11
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 12
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc2461c00
 Group {
  name Group12
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1320
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 10
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 11
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc97e5c00
 Group {
  name Group11
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1283
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 9
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 10
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Ne5928c00
 Group {
  name Group10
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1248
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 8
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 9
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc0965000
 Group {
  name Group5
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 924
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 1
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc051bc00
 Dot {
  name Dot6
  xpos -350
  ypos 1399
 }
set Nc1030000 [stack 0]
 Blur {
  channels rgba
  size {{"parent.stretch > 0 ? (1+parent.stretch)*8192:8192" i} {"stretch < 0 ? (1-stretch)*8192:8192" i}}
  crop false
  name blur_8192
  xpos -298
  ypos 1396
 }
push $Ncbaffc00
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  mix {{parent.size-12 i}}
  name Merge6
  xpos -185
  ypos 1396
 }
set Nc07e9c00 [stack 0]
 Group {
  name Group14
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 12
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 13
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc0ba2c00
 Group {
  name Group3
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 960
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 1
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nbb4be400
 Group {
  name Group1
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 996
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 1
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 2
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc8dbdc00
 Group {
  name Group2
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1032
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 2
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 3
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc0964000
 Group {
  name Group4
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1068
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 3
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 4
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc2bfac00
 Group {
  name Group6
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -50
  ypos 1104
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 4
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 5
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc7e2ac00
 Group {
  name Group7
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1140
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 5
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 6
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc83e0c00
 Group {
  name Group8
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1176
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 6
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 7
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nc8f1d800
 Group {
  name Group9
  help "Maps the input range to the output range using \"outMin+(((outMax-outMin) / (inMax - inMin)) * (inVal - inMin))\""
  xpos -49
  ypos 1212
  addUserKnob {20 User}
  addUserKnob {20 descriptGroup l Description n 1}
  descriptGroup 0
  addUserKnob {26 nodeDescription l "" +STARTLINE T "This node will map the input value \nto the output range, e.g. a slider \nvalue between 0 and 1 to an angle \n(0-360) etc.\n\n---\n\nExample usage: \n- Link the \"Input Value\" to the field \n/ node that contains your reference \nvalue.\n- Adjust the \"Input Minimum\" and \n\"Input Maximum\" fields to match \nthe lowest and highest figures your \nreference field might submit (e.g. 0 \nand 1 for a slider).\n- Adjust the \"Output Minimum\" and \n\"Output Maximum\" to match the \nrange you want to map the reference \nvalue to (e.g. 0 to 360 for an angle).\n- Link your target to the \"Output Value\" \nof this node.\n\n---\n\nUpdate in v0.2:\n\"Exponential Mapping\" will apply a gamma \nfunction to the output range, resulting\nin an exponential output instead of a\nlinear one.\n\n---\n\nv1.1 - September 2011\ne-mail julian\[at]yellow-ant\[dot]net"}
  addUserKnob {26 ""}
  addUserKnob {20 endGroup n -1}
  addUserKnob {7 inVal l "Input Value" t "Link to input field, e.g. a slider, switch, transform etc" R -1000 1000}
  inVal {{parent.size i}}
  addUserKnob {26 ""}
  addUserKnob {7 inMin l "Input Minimum" t "Adjust to match the smalles value your input field may submit." R -1000 1000}
  inMin 7
  addUserKnob {7 inMax l "Input Maximum" R -1000 1000}
  inMax 8
  addUserKnob {26 ""}
  addUserKnob {7 outMin l "Output Minimum" t "The lowest value you want to pass on." R -1000 1000}
  addUserKnob {7 outMax l "Output Maximum" t "The highest value you want to pass on." R -1000 1000}
  outMax 1
  addUserKnob {26 ""}
  addUserKnob {20 addSettings l "Additional Settings" n 1}
  addUserKnob {6 expoCurve l "Exponential Mapping" t "Check this to interpolate between values exponentially instead of linearly. " +STARTLINE}
  addUserKnob {7 gamExp l "Gamma Exponent" t "Values below 0 will result in the output value starting out slowly and then rushing towards the outMax. Above 0 will result in the outVal increasing rapidly, then easing slowly in to outMax." R -1 3}
  addUserKnob {20 endGroup_1 l endGroup n -1}
  addUserKnob {26 ""}
  addUserKnob {7 outVal l "Output Value" t "The result of the mapping calculation." R -1000 1000}
  outVal {{"expoCurve ? gammaMapper.newVal : valueMapper.newVal" i}}
 }
  Input {
   inputs 0
   name Input1
   xpos -283
   ypos 113
  }
  NoOp {
   name valueMapper
   selected true
   xpos -283
   ypos 173
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i x1 0}}
  }
  NoOp {
   name posMapper
   xpos -281
   ypos 220
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.inVal i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin {{parent.inMin i}}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax {{parent.inMax i}}
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 800
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  NoOp {
   name gammaMapper
   xpos -281
   ypos 246
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{"\[sample Gamma1 red 0.5 (posMapper.newVal+.5)]" i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 1
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   outMin {{parent.outMin i}}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax {{parent.outMax i}}
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Output {
   name Output1
   xpos -281
   ypos 307
  }
  Constant {
   inputs 0
   channels rgb
   format "800 800 0 0 800 800 1 "
   name Constant1
   xpos -123
   ypos 64
  }
  Ramp {
   p0 {100 0}
   p1 {100 800}
   name Ramp1
   xpos -123
   ypos 136
  }
  Rectangle {
   area {0 0 800 1}
   color 0
   name Rectangle1
   xpos -123
   ypos 162
  }
  Rectangle {
   area {0 799 800 800}
   name Rectangle2
   xpos -123
   ypos 188
  }
  NoOp {
   name gammaKnobMapper
   xpos -123
   ypos 214
   addUserKnob {20 User}
   addUserKnob {7 val l Value R 0 1000}
   val {{parent.gamExp i}}
   addUserKnob {7 inMin l "Input Minimum" R 0 1000}
   inMin -1
   addUserKnob {7 inMax l "Input Maximum" R 0 1000}
   inMax 3
   addUserKnob {7 outMin l "Output Minimum" R 0 1000}
   addUserKnob {7 outMax l "Output Maximum" R 0 1000}
   outMax 4
   addUserKnob {7 diffIn l "Input Difference" R 0 1000}
   diffIn {{inMax-inMin i}}
   addUserKnob {7 diffOut l "Output Difference" R 0 1000}
   diffOut {{outMax-outMin i}}
   addUserKnob {7 diffVal l "Value Difference" R 0 1000}
   diffVal {{val-inMin i}}
   addUserKnob {7 newVal l "Output Value" R 0 1000}
   newVal {{outMin+((diffOut/diffIn)*diffVal) i}}
  }
  Gamma {
   value {{parent.gammaKnobMapper.newVal i}}
   name Gamma1
   xpos -123
   ypos 240
  }
 end_group
push $Nbadac000
 Dot {
  name Dot16
  xpos -616
  ypos 276
 }
 Dot {
  name Dot18
  xpos -616
  ypos 2170
 }
set Nca77d800 [stack 0]
 Dot {
  name Dot7
  xpos -616
  ypos 2401
 }
set Nc0d25c00 [stack 0]
 Dot {
  name Dot13
  xpos -616
  ypos 2847
 }
 AddChannels {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  name AddChannels1
  selected true
  xpos -376
  ypos 2838
 }
push $Nc0c21400
 Dot {
  name Dot17
  xpos -480
  ypos 711
 }
 Dot {
  name Dot12
  xpos -480
  ypos 2637
 }
push $Nc1030000
 Dot {
  name Dot154
  xpos -350
  ypos 1476
 }
push $Nc07e9c00
 Merge2 {
  inputs 2
  operation from
  mix {{parent.subtract_input i}}
  name Merge24
  xpos -185
  ypos 1473
 }
 Grade {
  channels rgba
  name PostGradeNode
  xpos -185
  ypos 1656
 }
 Saturation {
  name PostSaturation
  xpos -185
  ypos 1680
 }
 Dot {
  name Dot23
  xpos -151
  ypos 1834
 }
set Nd0ee5c00 [stack 0]
 Dot {
  name Dot25
  xpos -12
  ypos 1834
 }
 Shuffle {
  red blue
  green blue
  alpha black
  name Shuffle4
  xpos -46
  ypos 1888
 }
 Grade {
  white {0 0 1 0}
  name TintBlue123
  xpos -46
  ypos 1912
 }
 Transform {
  center {960 540}
  name ShiftBlue123
  xpos -46
  ypos 1936
 }
 Dot {
  name Dot27
  xpos -12
  ypos 1986
 }
push 0
push $Nd0ee5c00
 Dot {
  name Dot24
  xpos -299
  ypos 1834
 }
 Shuffle {
  green red
  blue red
  alpha black
  name Shuffle2
  xpos -333
  ypos 1885
 }
 Grade {
  white {1 0 0 0}
  name TintRed123
  xpos -333
  ypos 1909
 }
 Transform {
  center {960 540}
  name ShiftRed123
  xpos -333
  ypos 1933
 }
 Dot {
  name Dot26
  xpos -299
  ypos 1986
 }
push $Nd0ee5c00
 Shuffle {
  red green
  blue green
  name Shuffle3
  xpos -185
  ypos 1887
 }
 Grade {
  white {0 1 0 0}
  name TintGreen123
  xpos -185
  ypos 1911
 }
 Transform {
  center {960 540}
  name ShiftGreen123
  xpos -185
  ypos 1935
 }
 Merge2 {
  inputs 3+1
  operation plus
  name Merge8
  xpos -185
  ypos 1983
 }
 Dot {
  name Dot28
  xpos -151
  ypos 2146
 }
set Ne66ea000 [stack 0]
 Dot {
  name Dot9
  xpos -53
  ypos 2146
 }
set Nc8384800 [stack 0]
 Dot {
  name Dot19
  xpos 46
  ypos 2146
 }
 Dot {
  name Dot21
  xpos 46
  ypos 2186
 }
push $Nc8384800
 Reformat {
  resize none
  filter Impulse
  black_outside true
  name Reformat1
  xpos -87
  ypos 2169
 }
push $Nca77d800
push $Ne66ea000
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -185
  ypos 2167
 }
 Switch {
  inputs 3
  which {{parent.cropbehavior}}
  name Switch1
  xpos -185
  ypos 2209
 }
 Dot {
  name Dot22
  xpos -151
  ypos 2362
 }
set Nc0a13800 [stack 0]
 Dot {
  name Dot15
  xpos 101
  ypos 2362
 }
 Dot {
  name Dot14
  xpos 101
  ypos 2613
 }
push $Nc0a13800
push $Nc0d25c00
 Merge2 {
  inputs 2
  operation {{"group.screen == true ?25:24" i}}
  maskChannelMask -rgba.alpha
  mix {{parent.mix i}}
  name Merge7
  xpos -185
  ypos 2398
 }
 Switch {
  inputs 2
  which {{parent.previewPost i x1 0}}
  name PreviewPost
  xpos -185
  ypos 2610
 }
 Switch {
  inputs 2
  which {{parent.preview}}
  name PreviewPre
  xpos -185
  ypos 2634
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name ignoreAlpha
  xpos -185
  ypos 2838
  disable {{"parent.ignore_alpha == 1 ? 0 : 1" i}}
 }
 Output {
  name Output1
  xpos -185
  ypos 3062
 }
push $Nc0d13000
push 0
push 0
 Viewer {
  inputs 3
  input_number 2
  input_process false
  name Viewer1
  xpos -73
  ypos 2049
 }
end_group
push $Ncb0fdc00
Grade {
 white 1.4
 gamma 0.63
 name Grade2
 xpos 1170
 ypos -268
}
Merge2 {
 inputs 2
 name Merge1
 xpos 1170
 ypos -217
}
push $Nca4ae800
Roto {
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x425c0000
        {x40d33330 x404cccc0}
        {x42633333 x42a06666}
        {xc0d33330 xc04cccc0}
        {x40933334 x413cccc8}
        {x41eccccd x42726666}
        {xc0933334 xc13ccccc}
        {xc0c66668 x40933330}
        {x422b333b x41ce6660}
        {x40c66668 xc0933334}
        {x40400000 x40000000}
        {x4301ccca x3f999a00}
        {xc0400000 xc0000000}
        {x405999a0 xc1033332}
        {x41a9999a x4181999a}
        {xc05999a0 x41033332}
        {x3f4cccc0 xc1499998}
        {xc0f99a00 x4225999a}
        {xbf4cccd0 x41499998}
        {xc1000000 xc119999c}
        {x41a80000 x426f3333}
        {x41000000 x4119999c}
        {xc0f99998 xc09999a0}
        {x4225999a x429d3333}
        {x40f99998 x409999a0}}}     idem}
     {tx x425c0000 x4201999a x423ce666}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x425c0000 ltm x425c0000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 55
 lifetime_end 55
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto2
 xpos 1393
 ypos -202
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard1
 xpos 306
 ypos -303
}
set Na8c09400 [stack 0]
BlinkScript {
 kernelSourceFile C:/Users/lukas/Desktop/kernel/rotate.cpp
 recompileCount 27
 ProgramGroup 1
 KernelDescription "2 \"RotateImage\" iterate pixelWise 98b64bfa041961b28e8cc575398dd1145f0c5acef2090d9fe64ad05673ab28cc 2 \"src\" Read Random \"dst\" Write Point 2 \"center\" Float 2 AABwRAAAB0Q= \"rotate\" Float 1 AAC0Qg== 2 \"_center\" 2 1 \"_rotate\" 1 1 1 \"srcconstEdgeColor\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
 kernelSource "kernel RotateImage : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeConstant> src;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  float2 _center;\n//  float2 _size;\n  float _rotate;\n\n\n\n  void define() \{\n    defineParam(_center, \"center\", float2(960.0f, 540.0f));\n    defineParam(_rotate, \"rotate\", float(90.0f));\n  \}\n\n  void init() \{\n\n  \}\n\n  void process(int2 pos) \{\n\n      float x = (float)pos.x;\n      float y = (float)pos.y;\n\n      float dx = (x - _center.x);\n      float dy = (y - _center.y);\n\n      float cs = cos( _rotate * 3.1415926535f/180.0f);\n      float sn = sin( _rotate * 3.1415926535f/180.0f);\n\n\n\n      x = dx*cs + dy * sn  + _center.x;\n      y = -dx*sn + dy * cs  + _center.y;\n\n\n    dst() = bilinear(src,x,y);\n\n  \}\n\};\n"
 useGPUIfAvailable false
 rebuild ""
 RotateImage_center {961 536}
 RotateImage_rotate 0
 rebuild_finalise ""
 name BlinkScript2
 xpos 306
 ypos -165
}
set Nd0bdf800 [stack 0]
push 0
push 0
push 0
push 0
push 0
push 0
push $Na8c09400
push $Nd0bdf800
push 0
Viewer {
 inputs 10
 frame 55
 frame_range 1-100
 fps 25
 input_number 1
 viewerProcess "sRGB (ACES)"
 name Viewer1
 xpos 252
 ypos 28
}
